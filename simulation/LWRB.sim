import static oms3.SimBuilder.instance as OMS3
def home = oms_prj

// start and end date of the simulation
def startDate= "2004-06-10 00:00"
def endDate="2010-01-01 00:00"
OMS3.sim {

resource "$oms_prj/lib"

 model(while: "reader_data_airT.doProcess" ) {
   components {
    
        // components to be called: reader input data, lwrb and writer output data
        "reader_data_airT"            "org.jgrasstools.gears.io.timedependent.OmsTimeSeriesIteratorReader"
        "reader_data_soilT"           "org.jgrasstools.gears.io.timedependent.OmsTimeSeriesIteratorReader"
         "reader_data_H"              "org.jgrasstools.gears.io.timedependent.OmsTimeSeriesIteratorReader"
        "reader_data_CI"              "org.jgrasstools.gears.io.timedependent.OmsTimeSeriesIteratorReader"
        "reader_sky"                  "org.jgrasstools.gears.io.rasterreader.OmsRasterReader"
        "vreader_station"             "org.jgrasstools.gears.io.shapefile.OmsShapefileFeatureReader"
        "l"                           "lwrbPointCase.Lwrb"
        "writer_down"                 "org.jgrasstools.gears.io.timedependent.OmsTimeSeriesIteratorWriter" 
        "writer_up"                   "org.jgrasstools.gears.io.timedependent.OmsTimeSeriesIteratorWriter" 
        "writer_long"                 "org.jgrasstools.gears.io.timedependent.OmsTimeSeriesIteratorWriter" 
            
         
   }

  
   parameter{
   
        // parameter of the reader components 
        "reader_data_airT.file"             "${home}/data/Taria.csv"
        "reader_data_airT.idfield"          "ID"  
        "reader_data_airT.tStart"           "${startDate}"
        "reader_data_airT.tEnd"             "${endDate}"
        "reader_data_airT.tTimestep"          60
        "reader_data_airT.fileNovalue"      "-9999"
        
        "reader_data_soilT.file"              "${home}/data/Tsuolo.csv"
        "reader_data_soilT.idfield"          "ID"  
        "reader_data_soilT.tStart"           "${startDate}"
        "reader_data_soilT.tEnd"             "${endDate}"
        "reader_data_soilT.tTimestep"         60
        "reader_data_soilT.fileNovalue"      "-9999"
        
        
        "reader_data_CI.file"                 "${home}/data/ClearnessIndex.csv"
        "reader_data_CI.idfield"              "ID"  
        "reader_data_CI.tStart"               "${startDate}"
        "reader_data_CI.tEnd"                 "${endDate}"
        "reader_data_CI.tTimestep"            60
        "reader_data_CI.fileNovalue"          "-9999"
        
        
        "reader_sky.file"                      "${home}/data/skyview.asc"
        "vreader_station.file"                  "${home}/data/stations.shp"
        
        
        "l.fStationsid"                      "cat" 


        // parameter of the lwrb component, see documentation for further datails
        "l.X"               0.70
        "l.Y"               5.95
        "l.model"           "6"
        "l.epsilonS"        0.98
        "l.A_Cloud"         0
        "l.B_Cloud"         1
            
        // parameter of the writing component    
        "writer_down.file"                   "${home}/output/downwelling.csv" 
        "writer_down.tStart"                 "${startDate}"
        "writer_down.tTimestep"              60
        
         "writer_up.file"                    "${home}/output/upwelling.csv" 
        "writer_up.tStart"                   "${startDate}"
        "writer_up.tTimestep"                60
        
         "writer_long.file"                  "${home}/output/longwave.csv" 
        "writer_long.tStart"                 "${startDate}"
        "writer_long.tTimestep"              60

   }
    connect {
        
        "reader_data_airT.outData"             "l.inAirTemperatureValues"
        "reader_data_soilT.outData"            "l.inSoilTempratureValues"
        "reader_data_CI.outData"               "l.inClearnessIndexValues"
        "reader_sky.outRaster"                 "l.inSkyview"          
        "vreader_station.geodata"              "l.inStations"
        "l.outHMlongwaveDownwelling"            "writer_down.inData"
        "l.outHMlongwaveUpwelling"              "writer_up.inData"
        "l.outHMlongwave"                       "writer_long.inData"

   }

 }
}


